<Page x:Class="LedMatrixIde.Views.ImageEditorPage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
	  xmlns:prismMvvm="using:Prism.Windows.Mvvm"
	  xmlns:controls="using:LedMatrixControl"
	  xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
	  prismMvvm:ViewModelLocator.AutoWireViewModel="True"
	  Style="{StaticResource PageStyle}"
	  mc:Ignorable="d">

	<Grid x:Name="ContentArea"
		  Margin="{StaticResource MediumLeftRightMargin}">
		<Grid Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

			<!-- Tool Bar -->
			<CommandBar Grid.Row="0"
						DefaultLabelPosition="Collapsed"
						HorizontalAlignment="Left"
						HorizontalContentAlignment="Left">

				<!-- Load Image -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  Icon="OpenFile"
							  ToolTipService.ToolTip="{x:Bind LoadButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding LoadCommand}" />

				<!-- Save Image -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  Icon="Save"
							  ToolTipService.ToolTip="{x:Bind SaveButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding SaveCommand}" />

				<AppBarSeparator />

				<!-- Undo -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  Icon="Undo"
							  ToolTipService.ToolTip="{x:Bind UndoButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding UndoCommand}" />

				<!-- Redo -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  Icon="Redo"
							  ToolTipService.ToolTip="{x:Bind RedoButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding RedoCommand}" />

				<AppBarSeparator />

				<!-- Draw -->
				<AppBarToggleButton BorderBrush="Transparent"
									BorderThickness="0,0,0,0"
									ToolTipService.ToolTip="{x:Bind DrawButtonToolTip}"
									ToolTipService.Placement="Bottom"
									IsChecked="{Binding DrawIsChecked, Mode=TwoWay}"
									IsEnabled="{Binding DrawIsEnabled, Mode=OneWay}">
					<AppBarToggleButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE70F;" />
					</AppBarToggleButton.Icon>
				</AppBarToggleButton>

				<!-- Erase -->
				<AppBarToggleButton BorderBrush="Transparent"
									BorderThickness="0,0,0,0"
									ToolTipService.ToolTip="{x:Bind EraseButtonToolTip}"
									ToolTipService.Placement="Bottom"
									IsChecked="{Binding DrawIsChecked, Converter={StaticResource NotBooleanConverter}, Mode=TwoWay}"
									IsEnabled="{Binding EraseIsEnabled, Mode=OneWay}">
					<AppBarToggleButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE75C;" />
					</AppBarToggleButton.Icon>
				</AppBarToggleButton>

				<AppBarSeparator />

				<!-- Color -->
				<AppBarButton ToolTipService.ToolTip="{x:Bind ColorButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Margin="0"
							  BorderBrush="{Binding PixelColor, Converter={StaticResource ColorToSolidColorBrushConverter}, Mode=OneWay}"
							  BorderThickness="6"
							  IsEnabled="{Binding ColorPickerIsEnabled, Mode=OneWay}">
					<AppBarButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE790;" />
					</AppBarButton.Icon>
					<AppBarButton.Flyout>
						<Flyout>
							<ColorPicker Color="{Binding PixelColor, Mode=TwoWay}"
										 IsAlphaEnabled="True"
										 IsAlphaSliderVisible="True"
										 IsColorChannelTextInputVisible="True"
										 IsColorPreviewVisible="True"
										 IsColorSliderVisible="True"
										 IsColorSpectrumVisible="True"
										 ColorSpectrumShape="Ring"
										 IsMoreButtonVisible="False" />
						</Flyout>
					</AppBarButton.Flyout>
				</AppBarButton>

				<!-- Pick Color -->
				<AppBarToggleButton BorderBrush="Transparent"
									BorderThickness="0,0,0,0"
									ToolTipService.ToolTip="{x:Bind PickColorButtonToolTip}"
									ToolTipService.Placement="Bottom"
									IsChecked="{Binding PickColorIsChecked, Mode=TwoWay}">
					<AppBarToggleButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xEF3C;" />
					</AppBarToggleButton.Icon>
				</AppBarToggleButton>

				<AppBarSeparator />

				<!-- Rotate Counter-Clockwise -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  ToolTipService.ToolTip="{x:Bind RotateCounterClockwiseButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding RotateCounterClockwiseCommand}">
					<AppBarButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE7AD;"
								  RenderTransformOrigin=".5,.5">
							<FontIcon.RenderTransform>
								<ScaleTransform ScaleX="-1" />
							</FontIcon.RenderTransform>
						</FontIcon>
					</AppBarButton.Icon>
				</AppBarButton>

				<!-- Rotate Clockwise -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  ToolTipService.ToolTip="{x:Bind RotateClockwiseButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding RotateClockwiseCommand}">
					<AppBarButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE7AD;" />
					</AppBarButton.Icon>
				</AppBarButton>

				<!-- Flip Horizontal -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  ToolTipService.ToolTip="{x:Bind FlipHorizontalButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding FlipHorizontalCommand}">
					<AppBarButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE7FD;" />
					</AppBarButton.Icon>
				</AppBarButton>

				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  ToolTipService.ToolTip="{x:Bind FlipVerticalButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding FlipVerticalCommand}">
					<AppBarButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE7FD;"
								  RenderTransformOrigin=".5,.5">
							<FontIcon.RenderTransform>
								<RotateTransform Angle="90" />
							</FontIcon.RenderTransform>
						</FontIcon>
					</AppBarButton.Icon>
				</AppBarButton>

				<AppBarSeparator />

				<!-- Clear -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  ToolTipService.ToolTip="{x:Bind ClearButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding ClearCommand}">
					<AppBarButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xED62;" />
					</AppBarButton.Icon>
				</AppBarButton>

				<AppBarSeparator />

				<!-- Build -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  ToolTipService.ToolTip="{x:Bind BuildButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding BuildCommand}">
					<AppBarButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xEC58;" />
					</AppBarButton.Icon>
				</AppBarButton>

				<AppBarToggleButton BorderBrush="Transparent"
									BorderThickness="0,0,0,0"
									ToolTipService.ToolTip="{x:Bind OutputButtonToolTip}"
									ToolTipService.Placement="Bottom"
									IsChecked="{Binding ShowOutput, Mode=TwoWay}">
					<AppBarToggleButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE756;" />
					</AppBarToggleButton.Icon>
				</AppBarToggleButton>
			</CommandBar>

			<Grid Grid.Row="1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="250" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<TextBlock Grid.Column="0"
						   Text="{x:Bind ProjectName}"
						   VerticalAlignment="Center"
						   HorizontalAlignment="Right"
						   Margin="5" />

				<TextBox Grid.Column="1"
						 Margin="5"
						 Text="{Binding ProjectName, Mode=TwoWay}" />
			</Grid>

			<!-- Matrix -->
			<controls:PixelMatrix x:Name="Matrix"
								  Grid.Row="2"
								  Margin="0,10,0,10"
								  BorderThickness="4"
								  extensions:Mouse.Cursor="Hand" />

			<!--
			<toolkit:GridSplitter x:Name="splitter"
								  Grid.Row="3"
								  Visibility="{Binding ShowOutput, Converter={StaticResource BooleanToVisibilityConverter}}"
								  ResizeBehavior="BasedOnAlignment"
								  ResizeDirection="Auto"
								  Background="{ThemeResource ComboBoxItemBackgroundSelected}"
								  Foreground="Black"
								  FontSize="9">
				<toolkit:GridSplitter.Element>
					<Border BorderBrush="Black"
							BorderThickness="1,0,0,0"
							VerticalAlignment="Stretch"
							HorizontalAlignment="Stretch">
						<Grid>
							<TextBlock HorizontalAlignment="Center"
									   IsHitTestVisible="False"
									   VerticalAlignment="Center"
									   Text="&#xE76F;"
									   Foreground="Black"
									   FontFamily="Segoe MDL2 Assets">
							</TextBlock>
						</Grid>
					</Border>
				</toolkit:GridSplitter.Element>
			</toolkit:GridSplitter>
			-->

			<!-- Output Window -->
			<Grid Grid.Row="3"
				  BorderBrush="{ThemeResource ContentDialogBorderThemeBrush}"
				  BorderThickness="3"
				  Background="{ThemeResource ContentDialogBackgroundThemeBrush}"
				  Height="250"
				  Visibility="{Binding ShowOutput, Converter={StaticResource BooleanToVisibilityConverter}}">
				<Grid.RowDefinitions>
					<RowDefinition Height="40" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
				<Grid Grid.Row="0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>

					<TextBlock Grid.Column="0"
							   Text="Output Window"
							   VerticalAlignment="Center"
							   HorizontalAlignment="Left"
							   Foreground="{ThemeResource ContentDialogContentForegroundBrush}"
							   Margin="5,0,0,0" />

					<Button Grid.Column="1"
							VerticalAlignment="Center"
							HorizontalAlignment="Right"
							Margin="0,0,3,3"
							Command="{Binding ClearOutputCommand}"
							Foreground="{ThemeResource ContentDialogContentForegroundBrush}">
						<Button.Content>
							<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
									  Glyph="&#xE8E6;"
									  Foreground="{ThemeResource ContentDialogContentForegroundBrush}">
							</FontIcon>
						</Button.Content>
					</Button>
				</Grid>

				<ListView Grid.Row="1"
						  BorderThickness="0"
						  IsItemClickEnabled="False"
						  IsSwipeEnabled="False"
						  CanDragItems="False"
						  SelectionMode="None"
						  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
						  ItemsSource="{Binding OutputItems}">
					<ListView.ItemTemplate>
						<DataTemplate>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="110" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>

								<Border Grid.Column="0"
										BorderBrush="{Binding EventType, Converter={StaticResource EventTypeToBackgroundBrushConverter}}"
										BorderThickness="2"
										Width="28"
										Height="28"
										VerticalAlignment="Center"
										HorizontalAlignment="Left">
									<Image Margin="1,1,1,1"
										   Source="{Binding EventType, Converter={StaticResource EventTypeToImageSourceConverter}}" />
								</Border>


								<TextBlock Grid.Column="1"
										   Text="{Binding EventType, Converter={StaticResource EventTypeToBracketedTextConverter}}"
										   FontFamily="Consolas"
										   FontSize="14"
										   VerticalAlignment="Center"
										   Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
										   Margin="5,0,0,0" />

								<TextBlock Grid.Column="2"
										   Text="{Binding Message}"
										   FontFamily="Consolas"
										   FontSize="14"
										   Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
										   VerticalAlignment="Center"
										   Margin="3,0,0,0" />
							</Grid>
						</DataTemplate>
					</ListView.ItemTemplate>
					<ListView.ItemContainerStyle>
						<Style TargetType="ListViewItem">
							<Setter Property="HorizontalContentAlignment"
									Value="Stretch" />
						</Style>
					</ListView.ItemContainerStyle>
				</ListView>

			</Grid>
		</Grid>
	</Grid>
</Page>
