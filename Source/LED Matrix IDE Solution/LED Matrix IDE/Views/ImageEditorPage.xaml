<Page x:Class="LedMatrixIde.Views.ImageEditorPage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:controls="using:LedMatrixControl"
	  xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
	  xmlns:prismMvvm="using:Prism.Windows.Mvvm"
	  prismMvvm:ViewModelLocator.AutoWireViewModel="True"
	  Style="{StaticResource PageStyle}"
	  mc:Ignorable="d">

	<Grid x:Name="ContentArea"
		  Margin="{StaticResource MediumLeftRightMargin}">

		<!-- Output Window -->
		<Grid BorderBrush="{ThemeResource ContentDialogBorderThemeBrush}"
			  BorderThickness="10"
			  Background="{ThemeResource ContentDialogBackgroundThemeBrush}"
			  Visibility="{Binding ShowOutput, Converter={StaticResource BooleanToVisibilityConverter}}">
			<Grid.RowDefinitions>
				<RowDefinition Height="60" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<Grid Grid.Row="0"
				  Margin="10">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<TextBlock Grid.Column="0"
						   Text="Output Window"
						   VerticalAlignment="Center"
						   HorizontalAlignment="Left"
						   Foreground="{ThemeResource ContentDialogContentForegroundBrush}"
						   Margin="5,0,0,0" />

				<Button Grid.Column="1"
						VerticalAlignment="Center"
						HorizontalAlignment="Right"
						Command="{Binding CloseOutputCommand}"
						Foreground="{ThemeResource ContentDialogContentForegroundBrush}">
					<Button.Content>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE8BB;"
								  Foreground="{ThemeResource ContentDialogContentForegroundBrush}">
						</FontIcon>
					</Button.Content>
				</Button>
			</Grid>

			<ListView Grid.Row="1"
					  BorderThickness="0"
					  IsItemClickEnabled="False"
					  IsSwipeEnabled="False"
					  CanDragItems="False"
					  SelectionMode="None"
					  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
					  ItemsSource="{Binding OutputItems}">
				<ListView.ItemTemplate>
					<DataTemplate>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="110" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<Border Grid.Column="0"
									BorderBrush="{Binding EventType, Converter={StaticResource EventTypeToBackgroundBrushConverter}}"
									BorderThickness="2"
									Width="28"
									Height="28"
									VerticalAlignment="Center"
									HorizontalAlignment="Left">
								<Image Margin="1,1,1,1"
									   Source="{Binding EventType, Converter={StaticResource EventTypeToImageSourceConverter}}" />
							</Border>


							<TextBlock Grid.Column="1"
									   Text="{Binding EventType, Converter={StaticResource EventTypeToBracketedTextConverter}}"
									   FontFamily="Consolas"
									   FontSize="14"
									   VerticalAlignment="Center"
									   Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
									   Margin="5,0,0,0" />

							<TextBlock Grid.Column="2"
									   Text="{Binding Message}"
									   FontFamily="Consolas"
									   FontSize="14"
									   Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
									   VerticalAlignment="Center"
									   Margin="3,0,0,0" />
						</Grid>
					</DataTemplate>
				</ListView.ItemTemplate>
				<ListView.ItemContainerStyle>
					<Style TargetType="ListViewItem">
						<Setter Property="HorizontalContentAlignment"
								Value="Stretch" />
					</Style>
				</ListView.ItemContainerStyle>
			</ListView>
		</Grid>

		<Grid x:Name="Background"
			  Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}"
			  Visibility="{Binding ShowOutput, Converter={StaticResource NotBooleanToVisibilityConverter}}">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="65" />
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

			<!-- Tool Bar -->
			<CommandBar Grid.Row="0"
						DefaultLabelPosition="Bottom"
						HorizontalAlignment="Stretch"
						HorizontalContentAlignment="Left">

				<!-- Load Image -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  Icon="OpenFile"
							  ToolTipService.ToolTip="{x:Bind LoadButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding LoadCommand}"
							  Label="{x:Bind LoadButtonLabel}" />

				<!-- Save Image -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  Icon="Save"
							  ToolTipService.ToolTip="{x:Bind SaveButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding SaveCommand}"
							  Label="{x:Bind SaveButtonLabel}" />

				<AppBarSeparator />

				<!-- Undo -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  Icon="Undo"
							  ToolTipService.ToolTip="{x:Bind UndoButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding UndoCommand}"
							  Label="{x:Bind UndoButtonLabel}" />

				<!-- Redo -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  Icon="Redo"
							  ToolTipService.ToolTip="{x:Bind RedoButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding RedoCommand}"
							  Label="{x:Bind RedoButtonLabel}" />

				<AppBarSeparator />

				<!-- Draw -->
				<AppBarToggleButton BorderBrush="Transparent"
									BorderThickness="0,0,0,0"
									ToolTipService.ToolTip="{x:Bind DrawButtonToolTip}"
									ToolTipService.Placement="Bottom"
									IsChecked="{Binding DrawIsChecked, Mode=TwoWay}"
									Label="{x:Bind DrawButtonLabel}">
					<AppBarToggleButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE70F;" />
					</AppBarToggleButton.Icon>
				</AppBarToggleButton>

				<!-- Sand -->
				<AppBarToggleButton BorderBrush="Transparent"
									BorderThickness="0,0,0,0"
									ToolTipService.ToolTip="{x:Bind SandButtonToolTip}"
									ToolTipService.Placement="Bottom"
									IsChecked="{Binding SandIsChecked, Mode=TwoWay}"
									IsEnabled="{Binding SandIsEnabled, Mode=OneWay}"
									Label="{x:Bind SandButtonLabel}">
					<AppBarToggleButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xED67;" />
					</AppBarToggleButton.Icon>
				</AppBarToggleButton>

				<!-- Erase -->
				<AppBarToggleButton BorderBrush="Transparent"
									BorderThickness="0,0,0,0"
									ToolTipService.ToolTip="{x:Bind EraseButtonToolTip}"
									ToolTipService.Placement="Bottom"
									IsChecked="{Binding EraseIsChecked, Mode=TwoWay}"
									Label="{x:Bind EraseButtonLabel}">
					<AppBarToggleButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE75C;" />
					</AppBarToggleButton.Icon>
				</AppBarToggleButton>

				<!-- Erase Color -->
				<AppBarToggleButton BorderBrush="Transparent"
									BorderThickness="0,0,0,0"
									ToolTipService.ToolTip="{x:Bind EraseColorButtonToolTip}"
									ToolTipService.Placement="Bottom"
									IsChecked="{Binding EraseColorIsChecked, Mode=TwoWay}"
									Label="{x:Bind EraseColorButtonLabel}">
					<AppBarToggleButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xED62;" />
					</AppBarToggleButton.Icon>
				</AppBarToggleButton>

				<AppBarSeparator />

				<!-- Color -->
				<AppBarButton ToolTipService.ToolTip="{x:Bind ColorButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Margin="0"
							  BorderBrush="{Binding PixelColor, Converter={StaticResource ColorToSolidColorBrushConverter}, Mode=OneWay}"
							  BorderThickness="5"
							  IsEnabled="{Binding ColorPickerIsEnabled, Mode=OneWay}"
							  Label="{x:Bind ColorButtonLabel}">
					<AppBarButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE790;" />
					</AppBarButton.Icon>
					<AppBarButton.Flyout>
						<Flyout>
							<ColorPicker Color="{Binding PixelColor, Mode=TwoWay}"
										 IsAlphaEnabled="True"
										 IsAlphaSliderVisible="True"
										 IsColorChannelTextInputVisible="True"
										 IsColorPreviewVisible="True"
										 IsColorSliderVisible="True"
										 IsColorSpectrumVisible="True"
										 ColorSpectrumShape="Ring"
										 IsMoreButtonVisible="False" />
						</Flyout>
					</AppBarButton.Flyout>
				</AppBarButton>

				<!-- Background Color -->
				<AppBarButton ToolTipService.ToolTip="{x:Bind BackgroundColorButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Margin="0"
							  BorderBrush="{Binding BackgroundColor, Converter={StaticResource ColorToSolidColorBrushConverter}, Mode=OneWay}"
							  BorderThickness="5"
							  IsEnabled="{Binding BackgroundColorPickerIsEnabled, Mode=OneWay}"
							  Label="{x:Bind BackgroundColorButtonLabel}">
					<AppBarButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE739;" />
					</AppBarButton.Icon>
					<AppBarButton.Flyout>
						<Flyout>
							<ColorPicker Color="{Binding BackgroundColor, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
										 IsAlphaEnabled="False"
										 IsAlphaSliderVisible="False"
										 IsColorChannelTextInputVisible="True"
										 IsColorPreviewVisible="True"
										 IsColorSliderVisible="True"
										 IsColorSpectrumVisible="True"
										 ColorSpectrumShape="Ring" />
						</Flyout>
					</AppBarButton.Flyout>
				</AppBarButton>

				<!-- Pick Color -->
				<AppBarToggleButton BorderBrush="Transparent"
									BorderThickness="0,0,0,0"
									ToolTipService.ToolTip="{x:Bind PickColorButtonToolTip}"
									ToolTipService.Placement="Bottom"
									IsChecked="{Binding PickColorIsChecked, Mode=TwoWay}"
									Label="{x:Bind PickColorButtonLabel}">
					<AppBarToggleButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xEF3C;" />
					</AppBarToggleButton.Icon>
				</AppBarToggleButton>

				<AppBarSeparator />

				<!-- Rotate Counter-Clockwise -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  ToolTipService.ToolTip="{x:Bind RotateCounterClockwiseButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding RotateCounterClockwiseCommand}"
							  Label="{x:Bind RotateCounterClockwiseButtonLabel}">
					<AppBarButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE7AD;"
								  RenderTransformOrigin=".5,.5">
							<FontIcon.RenderTransform>
								<CompositeTransform ScaleX="-1"
													Rotation="90" />
							</FontIcon.RenderTransform>
						</FontIcon>
					</AppBarButton.Icon>
				</AppBarButton>

				<!-- Rotate Clockwise -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  ToolTipService.ToolTip="{x:Bind RotateClockwiseButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding RotateClockwiseCommand}"
							  Label="{x:Bind RotateClockwiseButtonLabel}">
					<AppBarButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE7AD;"
								  RenderTransformOrigin=".5,.5">
							<FontIcon.RenderTransform>
								<RotateTransform Angle="-90" />
							</FontIcon.RenderTransform>
						</FontIcon>
					</AppBarButton.Icon>
				</AppBarButton>

				<!-- Flip Horizontal -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  ToolTipService.ToolTip="{x:Bind FlipHorizontalButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding FlipHorizontalCommand}"
							  Label="{x:Bind FlipHorizontalButtonLabel}">
					<AppBarButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE7FD;" />
					</AppBarButton.Icon>
				</AppBarButton>

				<!-- Flip Vertical -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  ToolTipService.ToolTip="{x:Bind FlipVerticalButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding FlipVerticalCommand}"
							  Label="{x:Bind FlipVerticalButtonLabel}">
					<AppBarButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE7FD;"
								  RenderTransformOrigin=".5,.5">
							<FontIcon.RenderTransform>
								<RotateTransform Angle="90" />
							</FontIcon.RenderTransform>
						</FontIcon>
					</AppBarButton.Icon>
				</AppBarButton>

				<AppBarSeparator />

				<!-- Clear -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  ToolTipService.ToolTip="{x:Bind ClearButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding ClearCommand}"
							  Label="{x:Bind ClearButtonLabel}">
					<AppBarButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xE74D;" />
					</AppBarButton.Icon>
				</AppBarButton>

				<AppBarSeparator />

				<!-- Build -->
				<AppBarButton BorderBrush="Transparent"
							  BorderThickness="0,0,0,0"
							  ToolTipService.ToolTip="{x:Bind BuildButtonToolTip}"
							  ToolTipService.Placement="Bottom"
							  Command="{Binding BuildCommand}"
							  Label="{x:Bind BuildButtonLabel}">
					<AppBarButton.Icon>
						<FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  Glyph="&#xEC58;" />
					</AppBarButton.Icon>
				</AppBarButton>
			</CommandBar>

			<!-- Project Properties -->
			<Grid Grid.Row="1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="250" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<!-- Project Name -->
				<TextBlock Grid.Column="0"
						   Text="{x:Bind ProjectNameLabel}"
						   VerticalAlignment="Center"
						   HorizontalAlignment="Right"
						   Margin="5,5,5,5" />

				<TextBox Grid.Column="1"
						 Margin="5,5,5,5"
						 VerticalAlignment="Center"
						 HorizontalAlignment="Stretch"
						 VerticalContentAlignment="Center"
						 HorizontalContentAlignment="Left"
						 Text="{Binding ProjectName, Mode=TwoWay}" />

				<!-- Random sand -->
				<RadioButton Grid.Column="2"
							 VerticalAlignment="Center"
							 Margin="25,5,5,5"
							 GroupName="Sand"
							 IsChecked="{Binding UseRandomSand, Mode=TwoWay}"
							 Content="{x:Bind RandomSandLabel}" />

				<TextBox Grid.Column="3"
						 Margin="5"
						 VerticalAlignment="Center"
						 HorizontalAlignment="Stretch"
						 VerticalContentAlignment="Center"
						 HorizontalContentAlignment="Left"
						 Text="{Binding RandomSandCount, Mode=TwoWay}"
						 IsEnabled="{Binding UseRandomSand}" />

				<RadioButton Grid.Column="4"
							 Content="{x:Bind DrawSandLabel}"
							 GroupName="Sand"
							 IsChecked="{Binding UseRandomSand, Converter={StaticResource NotBooleanConverter}, Mode=TwoWay}"
							 Margin="25,5,5,5" />
			</Grid>

			<!-- Matrix -->
			<controls:PixelMatrix x:Name="LedMatrix"
								  Grid.Row="2"
								  Margin="0,10,0,10"
								  BorderThickness="4"
								  RowCount="{Binding RowCount, Mode=OneTime}"
								  ColumnCount="{Binding ColumnCount, Mode=OneTime}"
								  extensions:Mouse.Cursor="Hand" />
		</Grid>
	</Grid>
</Page>
